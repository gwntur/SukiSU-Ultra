# Nama workflow yang akan tampil di tab Actions GitHub
name: Build SukiSU and Notify Telegram

# Pemicu workflow:
# 1. 'push': Otomatis berjalan saat ada commit baru ke branch utama.
# 2. 'workflow_dispatch': Memungkinkan Anda menjalankan workflow ini secara manual dari tab Actions.
on:
  push:
    branches:
      - main # Ganti 'main' jika nama branch default repositori berbeda (misal: 'master')
  workflow_dispatch:

jobs:
  build_and_notify:
    # Menggunakan sistem operasi Ubuntu versi terbaru untuk menjalankan proses
    runs-on: ubuntu-latest

    steps:
      # LANGKAH 1: Mengunduh (Checkout) Kode dari Repositori
      # Langkah paling penting untuk memastikan semua file proyek tersedia.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Mengambil semua histori commit agar changelog bisa lebih detail jika diperlukan.
          fetch-depth: 0

      # LANGKAH 2: [DEBUG] Verifikasi File Setelah Checkout
      # Langkah ini akan menampilkan daftar semua file di direktori utama.
      # Jika 'gradlew' tidak muncul di log ini, berarti ada masalah saat checkout.
      - name: '[DEBUG] List files in the root directory'
        run: ls -la

      # LANGKAH 3: Menyiapkan Lingkungan Build
      # Menyiapkan Java Development Kit (JDK) versi 17, sesuai kebutuhan SukiSU.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Menggunakan cache untuk dependensi Gradle agar proses build selanjutnya lebih cepat.
      - name: Gradle Cache
        uses: gradle/actions/setup-gradle@v3

      # LANGKAH 4: Memberikan Izin Eksekusi pada Gradle Wrapper
      # Perintah ini yang sebelumnya gagal. Langkah DEBUG di atas akan memastikan
      # file 'gradlew' sudah ada sebelum perintah ini dijalankan.
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # LANGKAH 5: Membangun Proyek dan Membuat APK
      # Menjalankan perintah build untuk modul 'app' dengan tipe 'release'.
      - name: Build with Gradle
        run: ./gradlew :app:assembleRelease

      # LANGKAH 6: [DEBUG] Verifikasi Hasil Build APK
      # Langkah ini akan menampilkan isi dari folder output build.
      # Gunakan log dari langkah ini untuk memastikan path dan nama file APK sudah benar
      # sebelum dikirim ke Telegram.
      - name: '[DEBUG] List contents of APK output directory'
        run: ls -R app/build/outputs/apk/release

      # LANGKAH 7: Mengambil Changelog dari Commit Terakhir
      # Mengambil seluruh pesan commit terakhir untuk dimasukkan ke notifikasi Telegram.
      - name: Get Commit Changelog
        id: changelog
        run: echo "changelog_message<<EOF$(git log -1 --pretty=%B)EOF" >> $GITHUB_OUTPUT

      # LANGKAH 8: Mengirim APK dan Notifikasi ke Telegram
      # Menggunakan action 'appleboy/telegram-action' untuk mengirim file dan pesan.
      - name: Send APK to Telegram
        uses: appleboy/telegram-action@master
        with:
          # Mengambil Chat ID dan Token Bot dari Secrets GitHub.
          # Pastikan Anda sudah mengaturnya di Settings > Secrets and variables > Actions.
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}

          # Path ke file APK yang akan dikirim. Pastikan path ini sesuai
          # dengan output dari langkah DEBUG #6.
          document: app/build/outputs/apk/release/app-release.apk

          # Format pesan notifikasi. Anda bisa menyesuaikannya sesuai selera.
          # Menggunakan variabel dari GitHub Actions untuk info dinamis.
          message: |
            *ðŸš€ New SukiSU Build is Ready!*

            *Version:* `SukiSU_v1.0_build-${{ github.run_number }}`
            *Commit by:* `${{ github.actor }}`
            *Branch:* `${{ github.ref_name }}`

            *Changelog:*
            ```
            ${{ steps.changelog.outputs.changelog_message }}
            ```
